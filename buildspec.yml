version: 0.2

phases:
  pre_build:
    commands:
      - echo Installing AWS CLI v2...
      - curl https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip -o /tmp/awscliv2.zip
      - unzip -q /tmp/awscliv2.zip -d /tmp
      - /tmp/aws/install
      - echo Logging in to Amazon ECR...
      - /usr/local/bin/aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - REPOSITORY_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME

  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG . --build-arg PORT=$PORT --build-arg RUN_ARGS="$RUN_ARGS" --build-arg GITHUB_TOKEN=$GITHUB_TOKEN
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $REPOSITORY_URI:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Creating deploy spec file...
      - |
        printf 'applicationName: "%s"
        deploymentGroupName: "%s"
        revision:
          revisionType: AppSpecContent
          appSpecContent:
            content: |
              version: 0.0
              Resources:
                - TargetService:
                    Type: AWS::ECS::Service
                    Properties:
                      TaskDefinition: "%s"
                      LoadBalancerInfo:
                        ContainerName: "%s"
                        ContainerPort: %s' $DEPLOY_APP_NAME $DEPLOY_GROUP_NAME $TASK_DEFINITION_ARN $CONTAINER_NAME $PORT > deploy.yaml
      - cat deploy.yaml
      - echo Executing deploy script...
      - python -V
      - python deploy.py
