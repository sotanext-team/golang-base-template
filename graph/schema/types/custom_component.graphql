type CustomComponentConnection {
    totalCount: Int!
    pageInfo: PageInfo!
    edges: [CustomComponentEdge]
}

type CustomComponentEdge {
    node: CustomComponent
    cursor: Cursor!
}

"""
The following enums are matched the entgql annotations in the ent/schema.
"""
enum CustomComponentOrderField {
    CREATED_AT
    NAME
}

input CustomComponentOrder {
    direction: OrderDirection!
    field: CustomComponentOrderField
}

"""
Define an object type and map it later to the generated Ent model.
https://graphql.org/learn/schema/#object-types-and-fields
"""
type CustomComponent implements Node @key(fields: "id") {
    id: ID!
    createdAt: Time
    updatedAt: Time
    name: String!
    handle: String!
    content: String
    distURL: String
    entryFileName: String!
    props: [ComponentProperty!]
}

type DevSession {
    id: ID!
    previewURL: String!
    component: CustomComponent!
}

"""
Define an input type for the mutation below.
https://graphql.org/learn/schema/#input-types

Note that, this type is mapped to the generated
input type in mutation_input.go.
"""
input CreateCustomComponentInput {
    name: String!
    content: String
    entryFileName: String
}

input UpdateCustomComponentInput {
    name: String
    content: String
}

input PrepareDevSessionInput {
    componentID: ID
}

extend type Mutation {
    customComponentCreate(input: CreateCustomComponentInput!): CustomComponent!
    customComponentUpdate(id: ID!, input: UpdateCustomComponentInput!): CustomComponent!
    customComponentUpdateLive(id: ID!, input: UpdateCustomComponentInput): CustomComponent!
    prepareDevSession(input: PrepareDevSessionInput!): DevSession!
}

extend type Query {
    CustomComponents(
        after: Cursor
        first: Int
        before: Cursor
        last: Int
        orderBy: CustomComponentOrder
        where: CustomComponentWhereInput
    ): CustomComponentConnection
}
