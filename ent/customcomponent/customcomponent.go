// Code generated by entc, DO NOT EDIT.

package customcomponent

import (
	"time"
)

const (
	// Label holds the string label denoting the customcomponent type in the database.
	Label = "custom_component"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldShopID holds the string denoting the shop_id field in the database.
	FieldShopID = "shop_id"
	// FieldCreatedBy holds the string denoting the created_by field in the database.
	FieldCreatedBy = "created_by"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldHandle holds the string denoting the handle field in the database.
	FieldHandle = "handle"
	// FieldContent holds the string denoting the content field in the database.
	FieldContent = "content"
	// FieldDistURL holds the string denoting the dist_url field in the database.
	FieldDistURL = "dist_url"
	// FieldIsDraft holds the string denoting the is_draft field in the database.
	FieldIsDraft = "is_draft"
	// FieldEntryFileName holds the string denoting the entry_file_name field in the database.
	FieldEntryFileName = "entry_file_name"
	// FieldSessionID holds the string denoting the session_id field in the database.
	FieldSessionID = "session_id"
	// EdgeProps holds the string denoting the props edge name in mutations.
	EdgeProps = "props"
	// Table holds the table name of the customcomponent in the database.
	Table = "custom_components"
	// PropsTable is the table that holds the props relation/edge.
	PropsTable = "component_properties"
	// PropsInverseTable is the table name for the ComponentProperty entity.
	// It exists in this package in order to avoid circular dependency with the "componentproperty" package.
	PropsInverseTable = "component_properties"
	// PropsColumn is the table column denoting the props relation/edge.
	PropsColumn = "component_id"
)

// Columns holds all SQL columns for customcomponent fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldShopID,
	FieldCreatedBy,
	FieldName,
	FieldHandle,
	FieldContent,
	FieldDistURL,
	FieldIsDraft,
	FieldEntryFileName,
	FieldSessionID,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
	// DefaultIsDraft holds the default value on creation for the "is_draft" field.
	DefaultIsDraft bool
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uint64
)
