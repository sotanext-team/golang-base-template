// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// BkTemplateSectionsColumns holds the columns for the "bk_template_sections" table.
	BkTemplateSectionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "theme_template_id", Type: field.TypeUint64, Nullable: true},
		{Name: "theme_id", Type: field.TypeUint64, Nullable: true},
		{Name: "theme_layout_id", Type: field.TypeUint64, Nullable: true},
		{Name: "data", Type: field.TypeString, Size: 2147483647},
		{Name: "template_section_id", Type: field.TypeUint64, Nullable: true},
		{Name: "version_id", Type: field.TypeUint64, Nullable: true},
	}
	// BkTemplateSectionsTable holds the schema information for the "bk_template_sections" table.
	BkTemplateSectionsTable = &schema.Table{
		Name:       "bk_template_sections",
		Columns:    BkTemplateSectionsColumns,
		PrimaryKey: []*schema.Column{BkTemplateSectionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "bk_template_sections_template_sections_revisions",
				Columns:    []*schema.Column{BkTemplateSectionsColumns[7]},
				RefColumns: []*schema.Column{TemplateSectionsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "bk_template_sections_template_section_versions_bkTemplateSections",
				Columns:    []*schema.Column{BkTemplateSectionsColumns[8]},
				RefColumns: []*schema.Column{TemplateSectionVersionsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// ComponentPropertiesColumns holds the columns for the "component_properties" table.
	ComponentPropertiesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString},
		{Name: "value", Type: field.TypeString},
		{Name: "component_id", Type: field.TypeUint64, Nullable: true},
	}
	// ComponentPropertiesTable holds the schema information for the "component_properties" table.
	ComponentPropertiesTable = &schema.Table{
		Name:       "component_properties",
		Columns:    ComponentPropertiesColumns,
		PrimaryKey: []*schema.Column{ComponentPropertiesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "component_properties_custom_components_props",
				Columns:    []*schema.Column{ComponentPropertiesColumns[5]},
				RefColumns: []*schema.Column{CustomComponentsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// CustomComponentsColumns holds the columns for the "custom_components" table.
	CustomComponentsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "shop_id", Type: field.TypeUint64, Nullable: true},
		{Name: "created_by", Type: field.TypeUint64},
		{Name: "name", Type: field.TypeString},
		{Name: "handle", Type: field.TypeString},
		{Name: "content", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "dist_url", Type: field.TypeString, Unique: true, Nullable: true},
		{Name: "is_draft", Type: field.TypeBool, Nullable: true, Default: true},
		{Name: "entry_file_name", Type: field.TypeString, Nullable: true},
		{Name: "session_id", Type: field.TypeUint64, Nullable: true},
	}
	// CustomComponentsTable holds the schema information for the "custom_components" table.
	CustomComponentsTable = &schema.Table{
		Name:       "custom_components",
		Columns:    CustomComponentsColumns,
		PrimaryKey: []*schema.Column{CustomComponentsColumns[0]},
	}
	// GlobalTemplatesColumns holds the columns for the "global_templates" table.
	GlobalTemplatesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "shop_id", Type: field.TypeUint64, Nullable: true},
		{Name: "name", Type: field.TypeString, Size: 200},
		{Name: "view_count", Type: field.TypeInt},
		{Name: "install_count", Type: field.TypeInt},
	}
	// GlobalTemplatesTable holds the schema information for the "global_templates" table.
	GlobalTemplatesTable = &schema.Table{
		Name:       "global_templates",
		Columns:    GlobalTemplatesColumns,
		PrimaryKey: []*schema.Column{GlobalTemplatesColumns[0]},
	}
	// ShopsColumns holds the columns for the "shops" table.
	ShopsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "shop_name", Type: field.TypeString, Size: 200, Default: ""},
		{Name: "default_domain", Type: field.TypeString, Unique: true, Size: 200},
		{Name: "custom_domain", Type: field.TypeString, Size: 200},
	}
	// ShopsTable holds the schema information for the "shops" table.
	ShopsTable = &schema.Table{
		Name:       "shops",
		Columns:    ShopsColumns,
		PrimaryKey: []*schema.Column{ShopsColumns[0]},
	}
	// TemplateSectionsColumns holds the columns for the "template_sections" table.
	TemplateSectionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "shop_id", Type: field.TypeUint64, Nullable: true},
		{Name: "global_section_id", Type: field.TypeUint64, Nullable: true},
		{Name: "theme_template_id", Type: field.TypeUint64, Nullable: true},
		{Name: "current_version_id", Type: field.TypeUint64, Nullable: true},
		{Name: "cid", Type: field.TypeString, Size: 50},
		{Name: "name", Type: field.TypeString, Size: 100},
		{Name: "area", Type: field.TypeEnum, Enums: []string{"HEADER", "MAIN", "FOOTER"}, Default: "MAIN"},
		{Name: "component", Type: field.TypeString, Size: 2147483647},
		{Name: "position", Type: field.TypeInt, Default: 1},
		{Name: "display", Type: field.TypeBool, Default: true},
	}
	// TemplateSectionsTable holds the schema information for the "template_sections" table.
	TemplateSectionsTable = &schema.Table{
		Name:       "template_sections",
		Columns:    TemplateSectionsColumns,
		PrimaryKey: []*schema.Column{TemplateSectionsColumns[0]},
	}
	// TemplateSectionVersionsColumns holds the columns for the "template_section_versions" table.
	TemplateSectionVersionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "theme_template_id", Type: field.TypeUint64, Nullable: true},
		{Name: "version", Type: field.TypeString, Size: 10},
		{Name: "name", Type: field.TypeString, Size: 100},
	}
	// TemplateSectionVersionsTable holds the schema information for the "template_section_versions" table.
	TemplateSectionVersionsTable = &schema.Table{
		Name:       "template_section_versions",
		Columns:    TemplateSectionVersionsColumns,
		PrimaryKey: []*schema.Column{TemplateSectionVersionsColumns[0]},
	}
	// ThemesColumns holds the columns for the "themes" table.
	ThemesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "name", Type: field.TypeString, Size: 200},
		{Name: "thumbnail", Type: field.TypeString, Size: 2084},
		{Name: "publish", Type: field.TypeBool, Default: false},
		{Name: "shop_id", Type: field.TypeUint64, Nullable: true},
	}
	// ThemesTable holds the schema information for the "themes" table.
	ThemesTable = &schema.Table{
		Name:       "themes",
		Columns:    ThemesColumns,
		PrimaryKey: []*schema.Column{ThemesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "themes_shops_themes",
				Columns:    []*schema.Column{ThemesColumns[7]},
				RefColumns: []*schema.Column{ShopsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ThemeTemplatesColumns holds the columns for the "theme_templates" table.
	ThemeTemplatesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "name", Type: field.TypeString, Size: 200},
		{Name: "page_type", Type: field.TypeEnum, Enums: []string{"INDEX", "PRODUCT", "COLLECTION", "ARTICLE", "PAGE"}, Default: "INDEX"},
		{Name: "default", Type: field.TypeBool, Default: false},
		{Name: "shop_id", Type: field.TypeUint64, Nullable: true},
		{Name: "theme_id", Type: field.TypeUint64, Nullable: true},
	}
	// ThemeTemplatesTable holds the schema information for the "theme_templates" table.
	ThemeTemplatesTable = &schema.Table{
		Name:       "theme_templates",
		Columns:    ThemeTemplatesColumns,
		PrimaryKey: []*schema.Column{ThemeTemplatesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "theme_templates_shops_themeTemplates",
				Columns:    []*schema.Column{ThemeTemplatesColumns[7]},
				RefColumns: []*schema.Column{ShopsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "theme_templates_themes_themeTemplates",
				Columns:    []*schema.Column{ThemeTemplatesColumns[8]},
				RefColumns: []*schema.Column{ThemesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// TodosColumns holds the columns for the "todos" table.
	TodosColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "text", Type: field.TypeString, Size: 2147483647},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"IN_PROGRESS", "COMPLETED"}, Default: "IN_PROGRESS"},
		{Name: "priority", Type: field.TypeInt, Default: 0},
		{Name: "todo_parent", Type: field.TypeUint64, Nullable: true},
	}
	// TodosTable holds the schema information for the "todos" table.
	TodosTable = &schema.Table{
		Name:       "todos",
		Columns:    TodosColumns,
		PrimaryKey: []*schema.Column{TodosColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "todos_todos_parent",
				Columns:    []*schema.Column{TodosColumns[7]},
				RefColumns: []*schema.Column{TodosColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		BkTemplateSectionsTable,
		ComponentPropertiesTable,
		CustomComponentsTable,
		GlobalTemplatesTable,
		ShopsTable,
		TemplateSectionsTable,
		TemplateSectionVersionsTable,
		ThemesTable,
		ThemeTemplatesTable,
		TodosTable,
	}
)

func init() {
	BkTemplateSectionsTable.ForeignKeys[0].RefTable = TemplateSectionsTable
	BkTemplateSectionsTable.ForeignKeys[1].RefTable = TemplateSectionVersionsTable
	ComponentPropertiesTable.ForeignKeys[0].RefTable = CustomComponentsTable
	ThemesTable.ForeignKeys[0].RefTable = ShopsTable
	ThemeTemplatesTable.ForeignKeys[0].RefTable = ShopsTable
	ThemeTemplatesTable.ForeignKeys[1].RefTable = ThemesTable
	TodosTable.ForeignKeys[0].RefTable = TodosTable
}
