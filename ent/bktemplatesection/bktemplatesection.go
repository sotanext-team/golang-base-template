// Code generated by entc, DO NOT EDIT.

package bktemplatesection

import (
	"time"
)

const (
	// Label holds the string label denoting the bktemplatesection type in the database.
	Label = "bk_template_section"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldVersionID holds the string denoting the version_id field in the database.
	FieldVersionID = "version_id"
	// FieldThemeTemplateID holds the string denoting the theme_template_id field in the database.
	FieldThemeTemplateID = "theme_template_id"
	// FieldTemplateSectionID holds the string denoting the template_section_id field in the database.
	FieldTemplateSectionID = "template_section_id"
	// FieldThemeID holds the string denoting the theme_id field in the database.
	FieldThemeID = "theme_id"
	// FieldThemeLayoutID holds the string denoting the theme_layout_id field in the database.
	FieldThemeLayoutID = "theme_layout_id"
	// FieldData holds the string denoting the data field in the database.
	FieldData = "data"
	// EdgeTemplateSection holds the string denoting the templatesection edge name in mutations.
	EdgeTemplateSection = "templateSection"
	// EdgeVersion holds the string denoting the version edge name in mutations.
	EdgeVersion = "version"
	// Table holds the table name of the bktemplatesection in the database.
	Table = "bk_template_sections"
	// TemplateSectionTable is the table that holds the templateSection relation/edge.
	TemplateSectionTable = "bk_template_sections"
	// TemplateSectionInverseTable is the table name for the TemplateSection entity.
	// It exists in this package in order to avoid circular dependency with the "templatesection" package.
	TemplateSectionInverseTable = "template_sections"
	// TemplateSectionColumn is the table column denoting the templateSection relation/edge.
	TemplateSectionColumn = "template_section_id"
	// VersionTable is the table that holds the version relation/edge.
	VersionTable = "bk_template_sections"
	// VersionInverseTable is the table name for the TemplateSectionVersion entity.
	// It exists in this package in order to avoid circular dependency with the "templatesectionversion" package.
	VersionInverseTable = "template_section_versions"
	// VersionColumn is the table column denoting the version relation/edge.
	VersionColumn = "version_id"
)

// Columns holds all SQL columns for bktemplatesection fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldVersionID,
	FieldThemeTemplateID,
	FieldTemplateSectionID,
	FieldThemeID,
	FieldThemeLayoutID,
	FieldData,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uint64
)
