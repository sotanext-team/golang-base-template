// Code generated by entc, DO NOT EDIT.

package shop

import (
	"time"
)

const (
	// Label holds the string label denoting the shop type in the database.
	Label = "shop"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldDeletedAt holds the string denoting the deleted_at field in the database.
	FieldDeletedAt = "deleted_at"
	// FieldShopName holds the string denoting the shop_name field in the database.
	FieldShopName = "shop_name"
	// FieldDefaultDomain holds the string denoting the default_domain field in the database.
	FieldDefaultDomain = "default_domain"
	// FieldCustomDomain holds the string denoting the custom_domain field in the database.
	FieldCustomDomain = "custom_domain"
	// EdgeThemes holds the string denoting the themes edge name in mutations.
	EdgeThemes = "themes"
	// EdgeThemeTemplates holds the string denoting the themetemplates edge name in mutations.
	EdgeThemeTemplates = "themeTemplates"
	// Table holds the table name of the shop in the database.
	Table = "shops"
	// ThemesTable is the table that holds the themes relation/edge.
	ThemesTable = "themes"
	// ThemesInverseTable is the table name for the Theme entity.
	// It exists in this package in order to avoid circular dependency with the "theme" package.
	ThemesInverseTable = "themes"
	// ThemesColumn is the table column denoting the themes relation/edge.
	ThemesColumn = "shop_id"
	// ThemeTemplatesTable is the table that holds the themeTemplates relation/edge.
	ThemeTemplatesTable = "theme_templates"
	// ThemeTemplatesInverseTable is the table name for the ThemeTemplate entity.
	// It exists in this package in order to avoid circular dependency with the "themetemplate" package.
	ThemeTemplatesInverseTable = "theme_templates"
	// ThemeTemplatesColumn is the table column denoting the themeTemplates relation/edge.
	ThemeTemplatesColumn = "shop_id"
)

// Columns holds all SQL columns for shop fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldDeletedAt,
	FieldShopName,
	FieldDefaultDomain,
	FieldCustomDomain,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
	// DefaultShopName holds the default value on creation for the "shop_name" field.
	DefaultShopName string
	// ShopNameValidator is a validator for the "shop_name" field. It is called by the builders before save.
	ShopNameValidator func(string) error
	// DefaultDomainValidator is a validator for the "default_domain" field. It is called by the builders before save.
	DefaultDomainValidator func(string) error
	// CustomDomainValidator is a validator for the "custom_domain" field. It is called by the builders before save.
	CustomDomainValidator func(string) error
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uint64
)
